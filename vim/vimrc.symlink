"
"
"

"""" Initialization
let mapleader=","             " set leader character binding

"""" General VIM Settings "{{{
set autoread                  " automatically re-read files if unmodified inside vim
set backspace=indent,eol,start " allow backspacing over indentation, line breaks and insertion start
"set backupdir=~/.cache/vim    " directory to store backup files
set clipboard+=unnamed        " yanks go to clipboard
set confirm                   " display a confirmation dialog when closing an unsaved file
"set dir=~/.cache/vim          " directory to store swap files
set formatoptions+=j          " delete comment characters when joining lines
set hidden                    " hide files in the background instead of closing them
set history=256               " number of changes to remember in history
set nocompatible              " disables vi compatibility
set nomodeline                " ignore file's mode lines; use vimrc configs instead
set noswapfile                " disable swap files
set nrformats-=octal          " interpret octal as decimal when incrementing numbers
"set shell                     " the shell used to execute commands
"set spell                     " enable spellchecking
set wildignore+=.swp          " ignore files matching these patterns when opening files based on glob pattern

" code folding
set foldlevelstart=10         " open folds by default
set foldmethod=indent         " fold based on indentation levels
set foldnestmax=6             " set maximum nested levels
set foldenable                " enable code folding

" indentation and spaces
filetype indent on            " enable file-specific indentation rules
filetype plugin on            " enable plugin-specific indentation rules 
set autoindent                " new lines inherit indentation of previous lines
set expandtab                 " replace tab character with spaces
set modelines=1
set shiftround                " round indentation to nearest multiple of 'shiftwidth'
set shiftwidth=2              " when shifting, indent using 'shiftwidth' spaces
set smarttab                  " insert 'tabstop' number of spaces when the 'tab' key is pressed
set softtabstop=2             
set tabstop=2                 " indent 'tabstop' number of spaces

" performance
set complete-=i               " limit the files searched for auto-completes
set lazyredraw                " don't update screen during macro execution

" search
set hlsearch                  " enable search highlighting
set ignorecase                " ignore case when searching
set incsearch                 " increment search shows partial matches
set smartcase                 " case-sensitive search when search query contains upper case letter

" search - turn off persistent search highlight
nnoremap <leader><space> :nohlsearch<CR>

" text rendering
set display+=lastline         " no '@' lines (:help 'display')
set encoding=utf-8            " set text encoding
set nowrap                    " disable text wrapping
set scrolloff=1               " number of lines to keep above and below cursor
set sidescrolloff=5           " number of columns to keep to the left and right of cursor
syntax on                     " enable syntax highlighting

" user interface
set background=dark           " use colors that suit a dark background
set cursorline                " highlight the line currently under cursor
set laststatus=2              " always display the status bar
set mouse=a                   " enable mouse for scrolling and resizing
set noerrorbells              " disable audible beep on errors
set number                    " show line numbers
set ruler                     " show cursor position
set tabpagemax=50             " maximum number of tab pages that can be opened from CLI
set title                     " set the window's title, show name of file being edited
set visualbell                " flash screen on error, alternative to beep on error
set wildmenu                  " display command line's tab complete options as a menu

" "}}}


"""" BEGIN vim-plug configuration "{{{

" specify a directory for plugins
" - avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.vim/plugged')

Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'vim-airline/vim-airline'
Plug 'ctrlpvim/ctrlp.vim'

" initialize plugin system
call plug#end()

"""" END vim-plug configuration "}}}


"""" BEGIN key mappings "{{{

map <C-n> :NERDTreeToggle<CR>

"""" END key mappings "}}}


"""" BEGIN autocommands "{{{
" do autocommands only if vim is compiled with support
if has("autocmd")

  " NERDTree stuff
  autocmd StdinReadPre * let s:std_in=1
  " start NERDTree when no file arguments are specified
  autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | exe "NERDTree" | endif
  " start NERDTree when opening a directory
  autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif

endif " has("autocmd")

"""" END autocommands "}}}

